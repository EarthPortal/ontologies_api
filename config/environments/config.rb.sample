# This file can be copied and renamed to match the environment you are running in:
#   production.rb
#   development.rb
#   test.rb

begin
  LinkedData.config do |config|
    config.repository_folder     = "/srv/ncbo/repository"
    config.goo_host              = "localhost"
    config.goo_port              = 9000
    config.search_server_url     = "http://localhost:8082/solr/term_search_core1"
    config.property_search_server_url = "http://localhost:8082/solr/prop_search_core1"
    config.rest_url_prefix       = "http://#{$SITE_URL}:8080/"
    config.replace_url_prefix    = true
    config.enable_security       = true

    config.apikey                = "24e0e77e-54e0-11e0-9d7b-005056aa3316"
    config.ui_host               = "http://#{$SITE_URL}"
    config.enable_monitoring     = false
    config.cube_host             = "localhost"
    config.enable_resource_index = false

    # Used to define other BioPortal to which this appliance can be mapped to
    # Example to map to the NCBO BioPortal : {"ncbo" => {"api" => "http://data.bioontology.org", "ui" => "http://bioportal.bioontology.org", "apikey" => ""}}
    # Then create the mapping using the following class in JSON : "http://purl.bioontology.org/ontology/MESH/C585345": "ncbo:MESH"
    # Where "ncbo" is the key in the interportal_hash. Use only lowercase letters for this key.
    # And do not use "ext" as a key, it is reserved for clases outside of any BioPortal
    config.interportal_hash   = {}

    # Caches
    config.http_redis_host    = "localhost"
    config.http_redis_port    = 6380
    config.enable_http_cache  = true
    config.goo_redis_host     = "localhost"
    config.goo_redis_port     = 6382

    Goo.use_cache             = true

    # Email notifications
    config.enable_notifications   = false
    config.email_sender           = "admin@example.org" # Default sender for emails
    config.email_override         = "override@example.org" # all email gets sent here. Disable with email_override_disable.
    config.email_disable_override = true
    config.smtp_host              = "localhost"
    config.smtp_port              = 25
    config.smtp_auth_type         = :none # :none, :plain, :login, :cram_md5
    config.smtp_domain            = "example.org"
    # Emails of the instance administrators to get mail notifications when new user or new ontology
    config.admin_emails           = ["admin@example.org"]

    # PURL server config parameters
    config.enable_purl            = false
    config.purl_host              = "purl.example.org"
    config.purl_port              = 80
    config.purl_username          = "admin"
    config.purl_password          = "password"
    config.purl_maintainers       = "admin"
    config.purl_target_url_prefix = "http://example.org"

    # Ontology Google Analytics Redis
    # disabled
    config.ontology_analytics_redis_host = "localhost"
    config.enable_ontology_analytics = false
    config.ontology_analytics_redis_port = 6379
  end
rescue NameError
  puts "(CNFG) >> LinkedData not available, cannot load config"
end

begin
  Annotator.config do |config|
    config.mgrep_dictionary_file   = "/srv/mgrep/dictionary/dictionary.txt"
    config.stop_words_default_file = "./config/default_stop_words.txt"
    config.mgrep_host              = "localhost"
    config.mgrep_port              = 55555
    config.mgrep_alt_host          = "localhost"
    config.mgrep_alt_port          = 55555
    config.annotator_redis_host    = "localhost"
    config.annotator_redis_port    = 6379
  end
rescue NameError
  puts "(CNFG) >> Annotator not available, cannot load config"
end

LinkedData::OntologiesAPI.config do |config|
  config.restrict_download = ["ACR0", "ACR1", "ACR2"]
end

begin
  LinkedData::OntologiesAPI.config do |config|
    config.enable_unicorn_workerkiller = true
    config.enable_throttling           = false
    config.enable_monitoring           = false
    config.cube_host                   = "localhost"
    config.http_redis_host             = "localhost"
    config.http_redis_port             = 6380
    config.ontology_rank               = ""
    config.resolver_redis_host = "localhost"
    config.resolver_redis_port = 6379
    config.restrict_download = ["ACR0", "ACR1", "ACR2"]
  end
rescue NameError
  puts "(CNFG) >> OntologiesAPI not available, cannot load config"
end

begin
  NcboCron.config do |config|
    config.redis_host                = Annotator.settings.annotator_redis_host
    config.redis_port                = Annotator.settings.annotator_redis_port
    config.enable_ontology_analytics = false
    config.enable_ontologies_report  = false
    # Schedulues
    config.cron_schedule             = "30 */4 * * *"
    # Pull schedule
    config.pull_schedule             = "00 18 * * *"
    # Pull long schedule for ontology that are pulled less frequently: run weekly on monday at 11 a.m. (23:00)
    config.pull_schedule_long                       = "00 23 * * 1"
    config.pull_long_ontologies                     = ["BIOREFINERY", "TRANSMAT", "GO"]
  end
rescue NameError
  puts "(CNFG) >> NcboCron not available, cannot load config"
end
